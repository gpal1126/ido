DROP TABLE USER_CATEGORY;
DROP TABLE SURVEY_ANSWER_TB;
DROP TABLE RE_REPLY_TB;
DROP TABLE CONTENTS_REPLY_TB;
DROP TABLE SURVEY_CONTENTS_TB;
DROP TABLE SURVEY_TYPE_TB;
DROP TABLE SURVEY_TB;
DROP TABLE CONTENTS_IMAGE_TB;
DROP TABLE IDO_CONTENTS_TB;
DROP TABLE GIVEAWAY_TB;
DROP TABLE COUPON_TB;
DROP TABLE PARTNER_TB;
DROP TABLE FACEBOOK_USER_TB;
DROP TABLE KAKAO_USER_TB;
DROP TABLE DETAIL_TB;
DROP TABLE IDO_USER_TB;
DROP TABLE PARTNER_TB;
DROP TABLE REPLY_LIKE_TB;
DROP TABLE CATEGORY_TB;


#PARTNER 유저 테이블
CREATE TABLE PARTNER_TB(PARTNER_ID MEDIUMINT NOT NULL AUTO_INCREMENT, DOCUMENT VARCHAR(20), REG_DATE DATE, PRIMARY KEY(PARTNER_ID));
#COUPON 테이블 
CREATE TABLE COUPON_TB(COUPON_ID MEDIUMINT NOT NULL AUTO_INCREMENT, PARTNER_ID MEDIUMINT NOT NULL, COUPON_NAME VARCHAR(100) NOT NULL, REG_DATE DATE NOT NULL, COUPON_EXPIRATION DATE NOT NULL, PRIMARY KEY(COUPON_ID), FOREIGN KEY(PARTNER_ID) REFERENCES PARTNER_TB(PARTNER_ID) ON DELETE CASCADE);


#IDO_USER 테이블
CREATE TABLE IDO_USER_TB(USER_ID MEDIUMINT NOT NULL AUTO_INCREMENT, PARTNER_ID MEDIUMINT NULL, USER_TYPE CHARACTER, USER_EMAIL VARCHAR(50), PASSWORD VARCHAR(50), SEX CHARACTER, PROFILE_PICTURE_PATH VARCHAR(100), NIKNAME VARCHAR(20), DETAIL CHARACTER, GIVEAWAY CHARACTER, USER_CODE VARCHAR(10), PRIMARY KEY(USER_ID), FOREIGN KEY(PARTNER_ID) REFERENCES PARTNER_TB(PARTNER_ID) ON DELETE CASCADE);
#DETAIL 정보입력 테이블
CREATE TABLE DETAIL_TB(USER_ID MEDIUMINT NOT NULL, USER_ADDRESS VARCHAR(100) NOT NULL, USER_AUTHENTICATION ENUM('Y','N') NOT NULL, USER_JOB TINYINT NOT NULL, USER_MARRY ENUM('Y','N') NOT NULL, PRIMARY KEY(USER_ID), FOREIGN KEY(USER_ID) REFERENCES IDO_USER_TB(USER_ID) ON DELETE CASCADE);
#GIVEAWAY_TB
CREATE TABLE GIVEAWAY_TB(GIVEAWAY_ID MEDIUMINT NOT NULL AUTO_INCREMENT, USER_ID MEDIUMINT NOT NULL, COUPON_ID MEDIUMINT NOT NULL, GIVEAWAY_NAME VARCHAR(100) NOT NULL, RECEIVE_DAY DATE NOT NULL, PRIMARY KEY(GIVEAWAY_ID), FOREIGN KEY(USER_ID) REFERENCES IDO_USER_TB(USER_ID) ON DELETE CASCADE, FOREIGN KEY(COUPON_ID) REFERENCES COUPON_TB(COUPON_ID) ON DELETE CASCADE);
#KAKAO_USER 테이블 // FACEBOOK_USER 테이블
CREATE TABLE FACEBOOK_USER_TB(FACEBOOK_USER_ID MEDIUMINT NOT NULL AUTO_INCREMENT, USER_EMAIL VARCHAR(50) NOT NULL, PRIMARY KEY(FACEBOOK_USER_ID));


#CONTENTS 테이블
CREATE TABLE IDO_CONTENTS_TB(CONTENTS_ID MEDIUMINT NOT NULL AUTO_INCREMENT, PARTNER_ID MEDIUMINT NOT NULL, CONTENTS_TYPE VARCHAR(10) NOT NULL, TITLE VARCHAR(100), THUMBNAIL_CONTENTS VARCHAR(100), THUMBNAIL_IMAGE_PATH VARCHAR(100), REG_DATE TIMESTAMP NOT NULL, CATEGORY VARCHAR(30) NOT NULL, IMAGE_TYPE VARCHAR(10) NOT NULL, CONTENTS_CHK CHARACTER, CLICK_COUNT INTEGER, PRIMARY KEY(CONTENTS_ID), FOREIGN KEY(PARTNER_ID) REFERENCES PARTNER_TB(PARTNER_ID) ON DELETE CASCADE);
#CONTENTS_IMAGE 테이블, ** contents_id -"not null로 변경되야함."
CREATE TABLE CONTENTS_IMAGE_TB(CONTENTS_IMAGE_ID MEDIUMINT NOT NULL AUTO_INCREMENT, CONTENTS_ID MEDIUMINT NOT NULL, LI_VALUE MEDIUMINT NOT NULL, CONTENTS_TYPE SMALLINT NOT NULL, CONTENTS_IMAGE_PATH VARCHAR(200) NOT NULL, CONTENTS_IMAGE_ORIGIN VARCHAR(100) NOT NULL, CONTENTS VARCHAR(200) NOT NULL, ORDER_NUM SMALLINT NOT NULL, PRIMARY KEY(CONTENTS_IMAGE_ID), CONSTRAINT CONTENTS_IMAGE_TB_ibfk_1 FOREIGN KEY(CONTENTS_ID) REFERENCES IDO_CONTENTS_TB(CONTENTS_ID) ON DELETE CASCADE);
#CONTENTS -> 설문 테이블
CREATE TABLE SURVEY_TB(SURVEY_ID MEDIUMINT NOT NULL AUTO_INCREMENT, CONTENTS_ID MEDIUMINT NOT NULL, SURVEY_TITLE VARCHAR(50) NOT NULL, SURVEY_THUMBNAIL VARCHAR(200) NULL, PRIMARY KEY(SURVEY_ID), FOREIGN KEY(CONTENTS_ID) REFERENCES IDO_CONTENTS_TB(CONTENTS_ID) ON DELETE CASCADE);
#SURVEY TYPE_TB
CREATE TABLE SURVEY_TYPE_TB(SURVEY_TYPE_ID SMALLINT NOT NULL AUTO_INCREMENT, SURVEY_ID MEDIUMINT NOT NULL, SURVEY_TYPE CHARACTER NOT NULL, SURVEY_ANSWER_TYPE CHARACTER NULL, SECOND_SURVEY_TITLE VARCHAR(100) NOT NULL, SECOND_SURVEY_IMAGE_PATH VARCHAR(200) NULL, SECOND_SURVEY_CROP_IMAGE VARCHAR(200) NULL, IMAGE_NAME VARCHAR(20) NULL, IMAGE_ORIGIN VARCHAR(1000) NULL, IMAGE_LINK_ADDR VARCHAR(2000) NULL, PRIMARY KEY(SURVEY_TYPE_ID), FOREIGN KEY(SURVEY_ID) REFERENCES SURVEY_TB(SURVEY_ID) ON DELETE CASCADE);
#SURVEY_CONTENTS
CREATE TABLE SURVEY_CONTENTS_TB(SURVEY_CONTENTS_ID SMALLINT NOT NULL AUTO_INCREMENT, SURVEY_TYPE_ID SMALLINT NOT NULL, SURVEY_CONTENTS VARCHAR(100) NOT NULL, SURVEY_ORIGIN VARCHAR(1000), SURVEY_LINK_ADDR VARCHAR(2000), SURVEY_IMAGE_PATH VARCHAR(200) NULL, SURVEY_CROP_IMAGE VARCHAR(200) NULL, PRIMARY KEY(SURVEY_CONTENTS_ID), FOREIGN KEY(SURVEY_TYPE_ID) REFERENCES SURVEY_TYPE_TB(SURVEY_TYPE_ID) ON DELETE CASCADE);
#CONTENTS_REPLY
CREATE TABLE CONTENTS_REPLY_TB(CONTENTS_REPLY_ID MEDIUMINT NOT NULL AUTO_INCREMENT, CONTENTS_ID MEDIUMINT NOT NULL, USER_ID MEDIUMINT NOT NULL, REPLY VARCHAR(200) NOT NULL, REG_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, RECOMMENDATION INTEGER, PRIMARY KEY(CONTENTS_REPLY_ID), FOREIGN KEY(CONTENTS_ID) REFERENCES IDO_CONTENTS_TB(CONTENTS_ID) ON DELETE CASCADE, FOREIGN KEY(USER_ID) REFERENCES IDO_USER_TB(USER_ID) ON DELETE CASCADE);
#RE_REPLY_TB
CREATE TABLE RE_REPLY_TB(CONTENTS_REPLY_ID MEDIUMINT NOT NULL, USER_ID MEDIUMINT NOT NULL, RE_REPLY VARCHAR(200) NOT NULL, REG_DATE DATE NOT NULL, PRIMARY KEY(CONTENTS_REPLY_ID), FOREIGN KEY(USER_ID) REFERENCES IDO_USER_TB(USER_ID) ON DELETE CASCADE);
#ANSWER
CREATE TABLE SURVEY_ANSWER_TB(SURVEY_ANSWER_ID MEDIUMINT NOT NULL AUTO_INCREMENT, SURVEY_ID MEDIUMINT NOT NULL, SURVEY_TYPE_ID SMALLINT NOT NULL, SURVEY_CONTENTS_ID SMALLINT NOT NULL, SURVEY_TYPE SMALLINT NOT NULL, USER_ID MEDIUMINT NOT NULL, ANSWER VARCHAR(50) NULL, ANSWER_DATE TIMESTAMP NULL, PRIMARY KEY(SURVEY_ANSWER_ID), FOREIGN KEY(SURVEY_TYPE_ID) REFERENCES SURVEY_TYPE_TB(SURVEY_TYPE_ID) ON DELETE CASCADE, FOREIGN KEY(SURVEY_CONTENTS_ID) REFERENCES SURVEY_CONTENTS_TB(SURVEY_CONTENTS_ID) ON DELETE CASCADE);


#Curation
CREATE TABLE USER_CATEGORY(USER_CATEGORY_ID MEDIUMINT NOT NULL AUTO_INCREMENT, USER_ID MEDIUMINT NOT NULL, CATEGORY VARCHAR(20) NOT NULL, PRIMARY KEY(USER_CATEGORY_ID));

#REPLY_LIKE_TB
CREATE TABLE REPLY_LIKE_TB(REPLY_LIKE_ID MEDIUMINT NOT NULL AUTO_INCREMENT, USER_ID MEDIUMINT NOT NULL, CONTENTS_REPLY_ID MEDIUMINT NOT NULL, LIKE_FLAG CHARACTER NULL, PRIMARY KEY(REPLY_LIKE_ID), FOREIGN KEY(USER_ID) REFERENCES IDO_USER_TB(USER_ID) ON DELETE CASCADE, FOREIGN KEY(CONTENTS_REPLY_ID) REFERENCES CONTENTS_REPLY_TB(CONTENTS_REPLY_ID) ON DELETE CASCADE);

#대분류 CATEGORY_TB
CREATE TABLE CATEGORY_TB(CATEGORY_ID MEDIUMINT NOT NULL AUTO_INCREMENT, CTG_VALUE VARCHAR(30), PRIMARY KEY(CATEGORY_ID));

INSERT INTO CATEGORY_TB(CATEGORY_ID, CTG_VALUE) VALUES(1, 'fashion');
INSERT INTO CATEGORY_TB(CATEGORY_ID, CTG_VALUE) VALUES(2, 'food');
INSERT INTO CATEGORY_TB(CATEGORY_ID, CTG_VALUE) VALUES(3, 'hobby');
INSERT INTO CATEGORY_TB(CATEGORY_ID, CTG_VALUE) VALUES(4, 'life');
INSERT INTO CATEGORY_TB(CATEGORY_ID, CTG_VALUE) VALUES(5, 'edu');
INSERT INTO CATEGORY_TB(CATEGORY_ID, CTG_VALUE) VALUES(6, 'digital');
INSERT INTO CATEGORY_TB(CATEGORY_ID, CTG_VALUE) VALUES(7, 'car');
INSERT INTO CATEGORY_TB(CATEGORY_ID, CTG_VALUE) VALUES(8, 'media');
INSERT INTO CATEGORY_TB(CATEGORY_ID, CTG_VALUE) VALUES(9, 'sports');
INSERT INTO CATEGORY_TB(CATEGORY_ID, CTG_VALUE) VALUES(10, 'issue');
INSERT INTO CATEGORY_TB(CATEGORY_ID, CTG_VALUE) VALUES(11, 'etc1');
INSERT INTO CATEGORY_TB(CATEGORY_ID, CTG_VALUE) VALUES(12, 'etc2');
INSERT INTO CATEGORY_TB(CATEGORY_ID, CTG_VALUE) VALUES(13, 'etc3');



